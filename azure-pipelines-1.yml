# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

variables: 
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Sonarcloud'
    organization: '210503-reston-net'
    scannerMode: 'MSBuild'
    projectKey: '210503-Reston-NET_Song-Juniper-P1'
    projectName: 'Song-Juniper-P1'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml'
#Basic pipeline of restoring, building, and testing
- task: DotNetCoreCLI@2
  displayName: Restore project deps
  inputs:
    command: 'restore'
    projects: $(solution)
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: $(solution)
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    projects: '**/StoreTests/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage Report
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coburtura/coverage.xml'
    reportDirectory: '**/StoreTests/'
- task: SonarCloudAnalyze@1
  displayName: Run Code Analysis
- task: SonarCloudPublish@1
  displayName: Publish Code Analysis

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: 'publish'
    publishWebProjects: false
    zipAfterPublish: true
    projects: '**/StoreWebUI/*.csproj'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription1'
    appType: 'webApp'
    WebAppName: 'wssp1'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

