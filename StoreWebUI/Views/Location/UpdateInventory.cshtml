@model StoreWebUI.Models.InventoryVM

@{
    ViewData["Title"] = "Inventory";
}

<h1>Update Inventory Quantity</h1>
<hr />
<div class="row">
    <dl class="row">
        <dt class="col-md-2">
            @Html.DisplayNameFor(model => model.Product.Name)
        </dt>
        <dd class="col-md-10">
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt class="col-md-2">
            @Html.DisplayNameFor(model => model.Product.Description)
        </dt>
        <dd class="col-md-10">
            @Html.DisplayFor(model => model.Product.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Product.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Product.Price)
        </dd>
    </dl>
    <div class="col-md-4">
        <form asp-action="UpdateInventory">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" min="0" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="LocationId" value=@Model.LocationId />
            <input type="hidden" asp-for="ProductId" value=@Model.ProductId />

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back To List", "Inventory", new { id = Model.LocationId })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}